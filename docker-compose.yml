services:

  sqlserver-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-db
    environment:
      SA_PASSWORD: "${SA_PASSWORD}"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/1433'"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 20s
      
  
  init-db:
    image: mcr.microsoft.com/mssql-tools
    container_name: initdbcontainer
    depends_on:
      sqlserver-db:
        condition: service_healthy
    environment:
      SA_PASSWORD: "${SA_PASSWORD}"
    volumes:
      - ./db/init.sql:/init.sql:ro
      
    entrypoint: >
      /bin/bash -c "
      /opt/mssql-tools/bin/sqlcmd -S sqlserver-db -U sa -P \"$$SA_PASSWORD\" -b -i /init.sql
      "
        
    restart: "no"

  clienti:
    build:
      context: ./ClientiService
          
    container_name: clienticontainer
    environment: 
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sqlserver-db:1433;databaseName=DBMAGAZZINI;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "Magazzinetto34*"
      SPRING_JPA_HIBERNATE_NAMING_PHYSICAL_STRATEGY: "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"
      SPRING_JPA_SHOW_SQL: "true"
    ports:
      - "9090:8080"
    depends_on:
      sqlserver-db:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
  prodotti:
    build:
      context: ./ProdottiService
    container_name: prodotticontainer
    environment: 
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sqlserver-db:1433;databaseName=DBMAGAZZINI;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "Magazzinetto34*"
      SPRING_JPA_HIBERNATE_NAMING_PHYSICAL_STRATEGY: "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"
      SPRING_JPA_SHOW_SQL: "true"
    ports:
      - "9091:8080"
    depends_on:
      sqlserver-db:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
  ordini:
    build:
      context: ./OrdiniService
    container_name: ordinicontainer
    environment:
      SPRING_DATASOURCE_URL: "jdbc:sqlserver://sqlserver-db:1433;databaseName=DBMAGAZZINI;encrypt=true;trustServerCertificate=true"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "Magazzinetto34*"
      SPRING_JPA_HIBERNATE_NAMING_PHYSICAL_STRATEGY: "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl"
      SPRING_JPA_SHOW_SQL: "true"
    ports:
      - "9092:8080"
    depends_on:
      sqlserver-db:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully
  
  apigateway:
    build:
      context: ./apigateway
    container_name: apigatewaycontainer
    ports:
      - "8088:8080"
    depends_on:
      init-db:
        condition: service_completed_successfully
      clienti:
        condition: service_started
      prodotti:
        condition: service_started
      ordini:
        condition: service_started


volumes:
  sqlserver_data:      